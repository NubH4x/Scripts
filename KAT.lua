local ii1I1iilli1lii1lIll = assert local lIl1I1l1l11I11liiii1I = select local III1Iillil1i1l1llIi = tonumber local iill11Ili1Iiii1lli1 = unpack local iIlIiiIllIlii1liiiI = pcall local l1llIllliIllI1Iii1I = setfenv local lIllilil1ilii1i1iIII1 = setmetatable local iiiIiiiliIllllI1IiI = type local i111llI1Illi1I1iiIl = getfenv local iIIIiIIII1l1lliiiIl = tostring local lIlIIi1ilillIi1iI1il1 = error local I11liI1liIii11IilIi = string.sub local ii1lI1Ill1iIiilIIli = string.byte local li1IllIiiIil11IIl1l = string.char local il1lii11IIIl11i1i1I = string.rep local lli1Ill1ili1i111Ili = string.gsub local ilIIiiIllIi1IiI1Iil = string.match local IIIil11illIlii1Illl = table.insert local lIlI1iiliiIllIii1I1ii = ii1lI1Ill1iIiilIIli("9", 1) local I11lIIlI1llliIlI1I1, IiiI11ll111li1Iiil1 = #{2125}, #{ 1288, 5451, 5256, 3530, 4026, 6233, 6656, 4800, 5744, 6802, 2288, 1356, 1360, 2555, 1765, 4017, 142, 4589, 5548, 5735 } + lIlI1iiliiIllIii1I1ii + 130994 local ll1ilIIi1liIliIl1lI = {} local ilIll1IlI1l1i1ilI1I = 1 local ilIIIllII11IiiIIiII, l1ii11lil111iIlii1i local function liiIl111l1liii1IiII(IlIiiiiili1ili1IiII, ll1lIiiIIllllliiIl1) local iI1IiIlIIlIl11Iliil IlIiiiiili1ili1IiII = lli1Ill1ili1i111Ili(I11liI1liIii11IilIi(IlIiiiiili1ili1IiII, 5), "..", function(ilIiilI11IiII111iil) if ii1lI1Ill1iIiilIIli(ilIiilI11IiII111iil, 2) == 72 then iI1IiIlIIlIl11Iliil = III1Iillil1i1l1llIi(I11liI1liIii11IilIi(ilIiilI11IiII111iil, 1, 1)) return "" else local iill11liIiIl11i1ilI = li1IllIiiIil11IIl1l(III1Iillil1i1l1llIi(ilIiilI11IiII111iil, 16)) if iI1IiIlIIlIl11Iliil then local lIllIIIliIiii11liiIl1 = il1lii11IIIl11i1i1I(iill11liIiIl11i1ilI, iI1IiIlIIlIl11Iliil) iI1IiIlIIlIl11Iliil = nil return lIllIIIliIiii11liiIl1 else return iill11liIiIl11i1ilI end end end) local function lIlliIlllI1Ili1ilIill() local IlIlI1IIl1lillii11i = ii1lI1Ill1iIiilIIli(IlIiiiiili1ili1IiII, ilIll1IlI1l1i1ilI1I, ilIll1IlI1l1i1ilI1I) ilIll1IlI1l1i1ilI1I = ilIll1IlI1l1i1ilI1I + 1 return IlIlI1IIl1lillii11i end local function li111I1IiIIi1iiIIl1() local IlIlI1IIl1lillii11i, iill11liIiIl11i1ilI, lIllIIIliIiii11liiIl1, lill1i1iiI11I1ilI1l = ii1lI1Ill1iIiilIIli(IlIiiiiili1ili1IiII, ilIll1IlI1l1i1ilI1I, ilIll1IlI1l1i1ilI1I + 3) ilIll1IlI1l1i1ilI1I = ilIll1IlI1l1i1ilI1I + 4 return lill1i1iiI11I1ilI1l * 16777216 + lIllIIIliIiii11liiIl1 * 65536 + iill11liIiIl11i1ilI * 256 + IlIlI1IIl1lillii11i end local function iIi1I11IIl11iI1lI1i(lIli1lI1IllliIlilIll1, Ii1l1iI1IiII1ii1iii, liIIIIIiilI1i11iIli) if liIIIIIiilI1i11iIli then local I11ll1IiI1IIiI1l1ii, ll11l1iIllIIIilIl1I = 0, 0 for lIl1iIl1i1illiIl1l1lI = Ii1l1iI1IiII1ii1iii, liIIIIIiilI1i11iIli do I11ll1IiI1IIiI1l1ii = I11ll1IiI1IIiI1l1ii + 2 ^ ll11l1iIllIIIilIl1I * iIi1I11IIl11iI1lI1i(lIli1lI1IllliIlilIll1, lIl1iIl1i1illiIl1l1lI) ll11l1iIllIIIilIl1I = ll11l1iIllIIIilIl1I + 1 end return I11ll1IiI1IIiI1l1ii else local l111I11IlIIill11l11 = 2 ^ (Ii1l1iI1IiII1ii1iii - 1) return l111I11IlIIill11l11 <= lIli1lI1IllliIlilIll1 % (l111I11IlIIill11l11 + l111I11IlIIill11l11) and 1 or 0 end end local function i1ilill1iIl1i1I1Iii() local IlIlI1IIl1lillii11i, iill11liIiIl11i1ilI = li111I1IiIIi1iiIIl1(), li111I1IiIIi1iiIIl1() if IlIlI1IIl1lillii11i == 0 and iill11liIiIl11i1ilI == 0 then return 0 end return (-2 * iIi1I11IIl11iI1lI1i(iill11liIiIl11i1ilI, 32) + 1) * 2 ^ (iIi1I11IIl11iI1lI1i(iill11liIiIl11i1ilI, 21, 31) - 1023) * ((iIi1I11IIl11iI1lI1i(iill11liIiIl11i1ilI, 1, 20) * 4294967296 + IlIlI1IIl1lillii11i) / 4503599627370496 + 1) end local iI1l1II1ill1Il1iIII = bit or bit32 local lIliI1lII1lIill1IIlIl = iI1l1II1ill1Il1iIII and iI1l1II1ill1Il1iIII.bxor or function(IlIlI1IIl1lillii11i, iill11liIiIl11i1ilI) local il11iiilllII1ll11ll = 1 local lIllIIIliIiii11liiIl1 = 0 while IlIlI1IIl1lillii11i > 0 and iill11liIiIl11i1ilI > 0 do local li1l1l1IIl11IIII1ii = IlIlI1IIl1lillii11i % 2 local l1II1iI1I1llIIil11i = iill11liIiIl11i1ilI % 2 if li1l1l1IIl11IIII1ii ~= l1II1iI1I1llIIil11i then lIllIIIliIiii11liiIl1 = lIllIIIliIiii11liiIl1 + il11iiilllII1ll11ll end IlIlI1IIl1lillii11i = (IlIlI1IIl1lillii11i - li1l1l1IIl11IIII1ii) / 2 iill11liIiIl11i1ilI = (iill11liIiIl11i1ilI - l1II1iI1I1llIIil11i) / 2 il11iiilllII1ll11ll = il11iiilllII1ll11ll * 2 end if IlIlI1IIl1lillii11i < iill11liIiIl11i1ilI then IlIlI1IIl1lillii11i = iill11liIiIl11i1ilI end while IlIlI1IIl1lillii11i > 0 do local li1l1l1IIl11IIII1ii = IlIlI1IIl1lillii11i % 2 if li1l1l1IIl11IIII1ii > 0 then lIllIIIliIiii11liiIl1 = lIllIIIliIiii11liiIl1 + il11iiilllII1ll11ll end IlIlI1IIl1lillii11i = (IlIlI1IIl1lillii11i - li1l1l1IIl11IIII1ii) / 2 il11iiilllII1ll11ll = il11iiilllII1ll11ll * 2 end return lIllIIIliIiii11liiIl1 end local function I11IliiIiIil11Ii11l(ii1li1IIllll1iIiI1I) local lIliillll11iIIll1l1 = { ii1lI1Ill1iIiilIIli(IlIiiiiili1ili1IiII, ilIll1IlI1l1i1ilI1I, ilIll1IlI1l1i1ilI1I + 3) } ilIll1IlI1l1i1ilI1I = ilIll1IlI1l1i1ilI1I + 4 local IlIlI1IIl1lillii11i = lIliI1lII1lIill1IIlIl(lIliillll11iIIll1l1[1], l1ii11lil111iIlii1i) local iill11liIiIl11i1ilI = lIliI1lII1lIill1IIlIl(lIliillll11iIIll1l1[2], l1ii11lil111iIlii1i) local lIllIIIliIiii11liiIl1 = lIliI1lII1lIill1IIlIl(lIliillll11iIIll1l1[3], l1ii11lil111iIlii1i) local lill1i1iiI11I1ilI1l = lIliI1lII1lIill1IIlIl(lIliillll11iIIll1l1[4], l1ii11lil111iIlii1i) l1ii11lil111iIlii1i = (225 * l1ii11lil111iIlii1i + ii1li1IIllll1iIiI1I) % 256 return lill1i1iiI11I1ilI1l * 16777216 + lIllIIIliIiii11liiIl1 * 65536 + iill11liIiIl11i1ilI * 256 + IlIlI1IIl1lillii11i end local function lIIIII1liIlillIlI1l(lIliIIili1lli11iI1iIl) local lIllIi1lIil1iI11iIilI = li111I1IiIIi1iiIIl1() local liiii1IIii1Ii1lI11I = "" for lIl1iIl1i1illiIl1l1lI = I11lIIlI1llliIlI1I1, lIllIi1lIil1iI11iIilI do liiii1IIii1Ii1lI11I = liiii1IIii1Ii1lI11I .. li1IllIiiIil11IIl1l(lIliI1lII1lIill1IIlIl(ii1lI1Ill1iIiilIIli(IlIiiiiili1ili1IiII, ilIll1IlI1l1i1ilI1I + lIl1iIl1i1illiIl1l1lI - 1), ilIIIllII11IiiIIiII)) ilIIIllII11IiiIIiII = (lIliIIili1lli11iI1iIl * ilIIIllII11IiiIIiII + 115) % 256 end ilIll1IlI1l1i1ilI1I = ilIll1IlI1l1i1ilI1I + lIllIi1lIil1iI11iIilI return liiii1IIii1Ii1lI11I end ilIIIllII11IiiIIiII = lIlliIlllI1Ili1ilIill() l1ii11lil111iIlii1i = lIlliIlllI1Ili1ilIill() local l1ilIiIiiIl1iiI1iII = {} for lIl1iIl1i1illiIl1l1lI = I11lIIlI1llliIlI1I1, lIlliIlllI1Ili1ilIill() do local lI11l1liIiiI1illll1 = lIlliIlllI1Ili1ilIill() local l1l1IIi1Il1IIl1IllI = (lIl1iIl1i1illiIl1l1lI - 1) * 2 l1ilIiIiiIl1iiI1iII[l1l1IIi1Il1IIl1IllI] = iIi1I11IIl11iI1lI1i(lI11l1liIiiI1illll1, 1, 4) l1ilIiIiiIl1iiI1iII[l1l1IIi1Il1IIl1IllI + 1] = iIi1I11IIl11iI1lI1i(lI11l1liIiiI1illll1, 5, 8) end local function li1llI1IlIil111lIlI() local lIlil1lll1iiliIi1iIll = { nil, nil, nil, {}, {}, {}, {} } lIlliIlllI1Ili1ilIill() lIlil1lll1iiliIi1iIll[1] = lIlliIlllI1Ili1ilIill() li111I1IiIIi1iiIIl1() local iliillIllil1IiI1lIi = li111I1IiIIi1iiIIl1() for lIl1iIl1i1illiIl1l1lI = I11lIIlI1llliIlI1I1, iliillIllil1IiI1lIi do lIlil1lll1iiliIi1iIll[7][lIl1iIl1i1illiIl1l1lI] = li111I1IiIIi1iiIIl1() end li111I1IiIIi1iiIIl1() local iliillIllil1IiI1lIi = li111I1IiIIi1iiIIl1() - (#{ 1703, 1599, 5281, 2244, 381, 2648, 3834, 538, 3911, 1325, 979, 748, 2441, 668, 4567, 1784, 2986, 3845, 4100, 4012, 5395 } + lIlI1iiliiIllIii1I1ii + 133658) local l1I1iI1lIiIIl1I1I1i = lIlliIlllI1Ili1ilIill() for lIl1iIl1i1illiIl1l1lI = I11lIIlI1llliIlI1I1, iliillIllil1IiI1lIi do local lIi111i1li11ilIlli1 local iiiIiiiliIllllI1IiI = lIlliIlllI1Ili1ilIill() if iiiIiiiliIllllI1IiI == #{ 3685, 6368, 5274, 2693, 2085, 3147, 5908, 4509, 980, 6706, 4347, 2329, 239, 3265, 304, 5582, 4972, 1743, 1541, 4577 } + lIlI1iiliiIllIii1I1ii + 31 then lIi111i1li11ilIlli1 = I11liI1liIii11IilIi(lIIIII1liIlillIlI1l(#{ 5671, 3245, 1732, 3477, 1990, 4290, 6419, 1391, 920, 5379, 3705, 4077, 3994, 5534, 5702, 6333, 6796, 4997, 225, 2272, 3303, 6814, 1570 } + lIlI1iiliiIllIii1I1ii + 40), #{ 4481, 240, 4254, 517 }) end if iiiIiiiliIllllI1IiI == #{ 734, 2969, 504, 536, 2871, 4452, 2010, 3648, 3519, 4226, 1483, 4014, 2240, 5176, 1717, 2446, 2077, 2198, 2743, 3593, 4354 } + lIlI1iiliiIllIii1I1ii + 23 then lIi111i1li11ilIlli1 = i1ilill1iIl1i1I1Iii() end if iiiIiiiliIllllI1IiI == #{ 2512, 5456, 74, 3187, 5877, 6812, 578, 236, 3530, 4407, 5209, 2258, 3534, 4170, 6860, 6377, 3932, 2262, 6537, 6133, 5535 } + lIlI1iiliiIllIii1I1ii + 47 then lIi111i1li11ilIlli1 = I11liI1liIii11IilIi(lIIIII1liIlillIlI1l(l1I1iI1lIiIIl1I1I1i), #{ 1031, 5592, 514 }) end if iiiIiiiliIllllI1IiI == #{ 799, 1492, 4844, 1049, 6933, 4404, 5510, 1369, 2931, 3172, 1043, 2468, 2884, 3101, 1368, 2355, 5668, 5626, 3548, 1452, 1329, 5672 } + lIlI1iiliiIllIii1I1ii + -22 then lIi111i1li11ilIlli1 = i1ilill1iIl1i1I1Iii() end if iiiIiiiliIllllI1IiI == #{ 4791, 5194, 966, 2447, 2036, 2884, 5587, 2867, 2257, 3991, 6146 } then lIi111i1li11ilIlli1 = i1ilill1iIl1i1I1Iii() end if iiiIiiiliIllllI1IiI == #{ 1857, 1021, 6202, 1267, 2056, 2170, 2385, 4393, 5130, 5371, 4226, 5175, 2248, 4495, 1108, 1556, 6870, 996, 389, 988 } + lIlI1iiliiIllIii1I1ii + 114 then lIi111i1li11ilIlli1 = lIlliIlllI1Ili1ilIill() end if iiiIiiiliIllllI1IiI == #{ 1773, 6176, 4512, 4711, 1749, 231, 3244, 3575, 1941, 5272, 145, 5536, 4003, 3001, 299, 6668, 3169, 5313, 957, 1525, 4146, 697, 3623, 5680 } + lIlI1iiliiIllIii1I1ii + 34 then lIi111i1li11ilIlli1 = lIlliIlllI1Ili1ilIill() + li111I1IiIIi1iiIIl1() + i1ilill1iIl1i1I1Iii() end if iiiIiiiliIllllI1IiI == #{ 6252, 485, 1308, 1635, 734, 5968, 2096, 19, 59, 5767, 2636, 4749, 6036, 4559, 2526, 3565, 937, 6273, 3629, 479, 4561, 6582, 1770 } + lIlI1iiliiIllIii1I1ii + 67 then lIi111i1li11ilIlli1 = #{ 2972, 3168, 2698, 3472, 6033, 3651, 6857, 6287, 2779, 6564, 1350, 2527, 4074, 774, 6892, 681, 1525, 4011, 4498, 4124, 4121 } + lIlI1iiliiIllIii1I1ii + 60554 == #{ 5686, 3875, 5818, 3059, 5746, 6324, 534, 983, 1370, 2202, 5393, 6034, 1879, 1768, 523, 3725, 4514, 3487, 686, 1971, 3934 } + lIlI1iiliiIllIii1I1ii + 116566 end if iiiIiiiliIllllI1IiI == #{ 4130, 5738, 2232, 1237, 325, 5718, 472, 5978, 1141, 334, 3019, 4338, 4788, 2885, 6052, 5676, 4227, 5045, 1584, 1654, 3162, 5352, 1327 } + lIlI1iiliiIllIii1I1ii + 51 then lIi111i1li11ilIlli1 = #{ 3231, 6501, 5833, 1991, 525, 4725, 1594, 605, 4330, 5398, 806, 4348, 4583, 4844, 1121, 2872, 6967, 100, 6162, 701, 1776, 4686, 5360 } + lIlI1iiliiIllIii1I1ii + 99689 == #{ 3231, 6501, 5833, 1991, 525, 4725, 1594, 605, 4330, 5398, 806, 4348, 4583, 4844, 1121, 2872, 6967, 100, 6162, 701, 1776, 4686, 5360 } + lIlI1iiliiIllIii1I1ii + 99689 end lIlil1lll1iiliIi1iIll[4][lIl1iIl1i1illiIl1l1lI - I11lIIlI1llliIlI1I1] = lIi111i1li11ilIlli1 end lIlil1lll1iiliIi1iIll[2] = lIlliIlllI1Ili1ilIill() lIlliIlllI1Ili1ilIill() local iliillIllil1IiI1lIi = li111I1IiIIi1iiIIl1() for lIl1iIl1i1illiIl1l1lI = I11lIIlI1llliIlI1I1, iliillIllil1IiI1lIi do lIlil1lll1iiliIi1iIll[5][lIl1iIl1i1illiIl1l1lI - I11lIIlI1llliIlI1I1] = li1llI1IlIil111lIlI() end lIlil1lll1iiliIi1iIll[3] = lIlliIlllI1Ili1ilIill() local lIl11Iiiillll1l1ii1ll = li111I1IiIIi1iiIIl1() - (#{ 2583, 5700, 4895, 2219, 4057, 3442, 6423, 5157, 3066, 193, 5090, 5850, 5700, 4444, 1062, 879, 1074, 4912, 4859, 6636, 5334 } + lIlI1iiliiIllIii1I1ii + 133654) local IliIIIllIIlIIIliiii = lIlliIlllI1Ili1ilIill() for lIl1iIl1i1illiIl1l1lI = I11lIIlI1llliIlI1I1, lIl11Iiiillll1l1ii1ll do local lIIiliIlll1llIl1li1 = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local lI11l1liIiiI1illll1 = I11IliiIiIil11Ii11l(IliIIIllIIlIIIliiii) lIIiliIlll1llIl1li1[4] = iIi1I11IIl11iI1lI1i(lI11l1liIiiI1illll1, #{715}, #{ 1217, 5595, 3101, 6202, 2329, 4156, 755, 5148, 6518, 3563, 2436, 3611, 4084, 6023, 978, 2053, 3229, 2783 }) lIIiliIlll1llIl1li1[9] = iIi1I11IIl11iI1lI1i(lI11l1liIiiI1illll1, #{ 2295, 421, 3396, 1387, 3821, 176, 242, 1555, 1783, 278, 1064, 1617, 3268, 2935, 2782, 3467, 3538, 4780, 193 }, #{ 1871, 1421, 925, 3881, 6358, 1650, 1079, 4279, 245, 2016, 1652, 6789, 2917, 103, 5433, 6531, 2147, 1489, 4361, 3467 } + lIlI1iiliiIllIii1I1ii + -51) lIIiliIlll1llIl1li1[2] = iIi1I11IIl11iI1lI1i(lI11l1liIiiI1illll1, #{ 2991, 1946, 2666, 6126, 6959, 6135, 3331, 3934, 6311, 6033 }, #{ 5897, 140, 1770, 2548, 2070, 4277, 3971, 1575, 6179, 1042, 2818, 418, 6148, 2280, 801, 4396, 4243, 6186 }) lIIiliIlll1llIl1li1[8] = iIi1I11IIl11iI1lI1i(lI11l1liIiiI1illll1, #{ 3806, 5724, 6527, 4824, 5244, 5802, 643, 5365, 5534, 6720, 2176, 5839, 6423, 2768, 2095, 1087, 1827, 597, 1774, 3223 } + lIlI1iiliiIllIii1I1ii + -50, #{ 5845, 932, 5465, 6419, 3300, 5008, 4799, 3524, 3305, 3202, 1969, 6922, 3147, 5083, 1507, 5415, 5473, 655, 4117, 612, 1088, 1307 } + lIlI1iiliiIllIii1I1ii + -47) lIIiliIlll1llIl1li1[5] = iIi1I11IIl11iI1lI1i(lI11l1liIiiI1illll1, #{3517}, #{ 6384, 1250, 2748, 6555, 3328, 5141, 2364, 6784, 3380 }) lIlil1lll1iiliIi1iIll[6][lIl1iIl1i1illiIl1l1lI] = lIIiliIlll1llIl1li1 end for lIl1iIl1i1illiIl1l1lI = I11lIIlI1llliIlI1I1, lIl11Iiiillll1l1ii1ll do local lIIiliIlll1llIl1li1 = lIlil1lll1iiliIi1iIll[6][lIl1iIl1i1illiIl1l1lI] local lIlillIIIl1i1iIlI11lI = l1ilIiIiiIl1iiI1iII[lIIiliIlll1llIl1li1[8]] if lIlillIIIl1i1iIlI11lI == #{ 2633, 6747, 1013, 4744 } then lIIiliIlll1llIl1li1[3] = lIlil1lll1iiliIi1iIll[4][lIIiliIlll1llIl1li1[4]] end if lIlillIIIl1i1iIlI11lI == #{ 3187, 4229, 1107 } then if lIIiliIlll1llIl1li1[5] > 255 then lIIiliIlll1llIl1li1[7] = true lIIiliIlll1llIl1li1[10] = lIlil1lll1iiliIi1iIll[4][lIIiliIlll1llIl1li1[5] - 256] end if lIIiliIlll1llIl1li1[2] > 255 then lIIiliIlll1llIl1li1[1] = true lIIiliIlll1llIl1li1[6] = lIlil1lll1iiliIi1iIll[4][lIIiliIlll1llIl1li1[2] - 256] end end if lIlillIIIl1i1iIlI11lI == #{3314} and lIIiliIlll1llIl1li1[5] > 255 then lIIiliIlll1llIl1li1[7] = true lIIiliIlll1llIl1li1[10] = lIlil1lll1iiliIi1iIll[4][lIIiliIlll1llIl1li1[5] - 256] end if lIlillIIIl1i1iIlI11lI == #{6579, 6626} and lIIiliIlll1llIl1li1[2] > 255 then lIIiliIlll1llIl1li1[1] = true lIIiliIlll1llIl1li1[6] = lIlil1lll1iiliIi1iIll[4][lIIiliIlll1llIl1li1[2] - 256] end end lIlliIlllI1Ili1ilIill() li111I1IiIIi1iiIIl1() return lIlil1lll1iiliIi1iIll end local function liillliI1111Ill1l1l(lIlil1lll1iiliIi1iIll, ll1lIiiIIllllliiIl1, I1IIi1Il1Ii11ilIil1) local l11il1ilIillIl11iII, i1i11i1iI111I1llIiI = 22, 16 local il1iillI1l1iI1IIIIi = lIlil1lll1iiliIi1iIll[6] local l1iiliilIll1ii11I1i = 1 local lIl11IIiil1iilIl11iiI = lIlil1lll1iiliIi1iIll[5] local l1Iiii11ilIi1li1li1 = lIlil1lll1iiliIi1iIll[2] local lIlI1il1l1iIiIll1I1ll = lIlil1lll1iiliIi1iIll[3] local ilIii11I1111liIilii = 8 local lilliiiI1IIlii1il1i = lIlil1lll1iiliIi1iIll[7] local lli1111I1Iill1l1Iil = 5 local function lI1IiiI11I1Illiliii(...) local IilI11l1iIl1IiiIlIi = 0 local lllI11iiiIlI11IiiiI = { iill11Ili1Iiii1lli1({}, 1, lIlI1il1l1iIiIll1I1ll) } local I1ll1I1i1l1IIiilIII = 1 local iIllll1IiI1lilIII1l = {} local lIl1liI1lil1llll11iii = {} local ll1lIiiIIllllliiIl1 = i111llI1Illi1I1iiIl() local IiIIiII1iIlliiIl1Il = { ... } local lIIIIIIIliIi1ll111I = #IiIIiII1iIlliiIl1Il - 1 for lIl1iIl1i1illiIl1l1lI = 0, lIIIIIIIliIi1ll111I do if lIl1iIl1i1illiIl1l1lI < l1Iiii11ilIi1li1li1 then lllI11iiiIlI11IiiiI[lIl1iIl1i1illiIl1l1lI] = IiIIiII1iIlliiIl1Il[lIl1iIl1i1illiIl1l1lI + 1] end end local function liliili1IlIiI111IIi(...) local lIllIIIliIiii11liiIl1 = lIl1I1l1l11I11liiii1I("#", ...) local il11I1I11llliliIil1 = { ... } return lIllIIIliIiii11liiIl1, il11I1I11llliliIil1 end local function lIlI11I1iIl1iiIilIll1() while true do local iiliIi1lIi11iII1Iii = il1iillI1l1iI1IIIIi[I1ll1I1i1l1IIiilIII] local lIlIl1liIi1ii1I11li11 = iiliIi1lIi11iII1Iii[8] I1ll1I1i1l1IIiilIII = I1ll1I1i1l1IIiilIII + 1 if lIlIl1liIi1ii1I11li11 < 12 then if lIlIl1liIi1ii1I11li11 < 6 then if lIlIl1liIi1ii1I11li11 < 3 then if lIlIl1liIi1ii1I11li11 >= 1 then if lIlIl1liIi1ii1I11li11 ~= 2 then local lIllIIIliIiii11liiIl1 if iiliIi1lIi11iII1Iii[1] then lIllIIIliIiii11liiIl1 = iiliIi1lIi11iII1Iii[6] else lIllIIIliIiii11liiIl1 = lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[2]] end lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[9]] = lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[5]][lIllIIIliIiii11liiIl1] else lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[9]] = iiliIi1lIi11iII1Iii[3] end else lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[9]] = ll1lIiiIIllllliiIl1[iiliIi1lIi11iII1Iii[3]] end elseif lIlIl1liIi1ii1I11li11 >= 4 then if lIlIl1liIi1ii1I11li11 ~= 5 then local i11il1liI1IliIII1I1 = lIl11IIiil1iilIl11iiI[iiliIi1lIi11iII1Iii[4]] local lIl1111iIllIiIlliI1l1 = {} if i11il1liI1IliIII1I1[l1iiliilIll1ii11I1i] > 0 then do local iIIllI1iiiiillIl1ll = {} lIl1111iIllIiIlliI1l1 = lIllilil1ilii1i1iIII1({}, { __index = function(il11I1I11llliliIil1, i1l1iIi1IiIii1ilII1) local I1iIi1i1I11llIllIiI = iIIllI1iiiiillIl1ll[i1l1iIi1IiIii1ilII1] return I1iIi1i1I11llIllIiI[1][I1iIi1i1I11llIllIiI[2]] end, __newindex = function(il11I1I11llliliIil1, i1l1iIi1IiIii1ilII1, i1lIillI1illl1llIli) local I1iIi1i1I11llIllIiI = iIIllI1iiiiillIl1ll[i1l1iIi1IiIii1ilII1] I1iIi1i1I11llIllIiI[1][I1iIi1i1I11llIllIiI[2]] = i1lIillI1illl1llIli end }) for lIl1iIl1i1illiIl1l1lI = 1, i11il1liI1IliIII1I1[l1iiliilIll1ii11I1i] do local l1lllli1ii11ii11i1i = il1iillI1l1iI1IIIIi[I1ll1I1i1l1IIiilIII] if l1lllli1ii11ii11i1i[ilIii11I1111liIilii] == l11il1ilIillIl11iII then iIIllI1iiiiillIl1ll[lIl1iIl1i1illiIl1l1lI - 1] = { lllI11iiiIlI11IiiiI, l1lllli1ii11ii11i1i[lli1111I1Iill1l1Iil] } elseif l1lllli1ii11ii11i1i[ilIii11I1111liIilii] == i1i11i1iI111I1llIiI then iIIllI1iiiiillIl1ll[lIl1iIl1i1illiIl1l1lI - 1] = { I1IIi1Il1Ii11ilIil1, l1lllli1ii11ii11i1i[lli1111I1Iill1l1Iil] } end I1ll1I1i1l1IIiilIII = I1ll1I1i1l1IIiilIII + 1 end if not iIllll1IiI1lilIII1l[lllI11iiiIlI11IiiiI] then iIllll1IiI1lilIII1l[lllI11iiiIlI11IiiiI] = {iIIllI1iiiiillIl1ll} else IIIil11illIlii1Illl(iIllll1IiI1lilIII1l[lllI11iiiIlI11IiiiI], iIIllI1iiiiillIl1ll) end end end local lIllliIllli11iii1lII1 = liillliI1111Ill1l1l(i11il1liI1IliIII1I1, ll1lIiiIIllllliiIl1, lIl1111iIllIiIlliI1l1) lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[9]] = lIllliIllli11iii1lII1 else ll1lIiiIIllllliiIl1[iiliIi1lIi11iII1Iii[3]] = lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[9]] end else iIllll1IiI1lilIII1l[lllI11iiiIlI11IiiiI] = nil local IIii1IIlIi11IIIlliI = iiliIi1lIi11iII1Iii[9] local IiIIiII1iIlliiIl1Il = iiliIi1lIi11iII1Iii[5] local Ill11I1IlIiilI1i1lI, iI1i11lIl1illlIllil if IiIIiII1iIlliiIl1Il ~= 1 then if IiIIiII1iIlliiIl1Il ~= 0 then iI1i11lIl1illlIllil = IIii1IIlIi11IIIlliI + IiIIiII1iIlliiIl1Il - 1 else iI1i11lIl1illlIllil = IilI11l1iIl1IiiIlIi end iI1i11lIl1illlIllil, Ill11I1IlIiilI1i1lI = liliili1IlIiI111IIi(lllI11iiiIlI11IiiiI[IIii1IIlIi11IIIlliI](iill11Ili1Iiii1lli1(lllI11iiiIlI11IiiiI, IIii1IIlIi11IIIlliI + 1, iI1i11lIl1illlIllil))) else iI1i11lIl1illlIllil, Ill11I1IlIiilI1i1lI = liliili1IlIiI111IIi(lllI11iiiIlI11IiiiI[IIii1IIlIi11IIIlliI]()) end lllI11iiiIlI11IiiiI = Ill11I1IlIiilI1i1lI return true, 1, iI1i11lIl1illlIllil end elseif lIlIl1liIi1ii1I11li11 < 9 then if lIlIl1liIi1ii1I11li11 >= 7 then if lIlIl1liIi1ii1I11li11 ~= 8 then local IIii1IIlIi11IIIlliI = iiliIi1lIi11iII1Iii[9] local IiIIiII1iIlliiIl1Il = iiliIi1lIi11iII1Iii[5] local lil11l11II111iIi111 = iiliIi1lIi11iII1Iii[2] local Ill11I1IlIiilI1i1lI, iI1i11lIl1illlIllil, lIlI11I1iIl1iiIilIll1 if IiIIiII1iIlliiIl1Il ~= 1 then if IiIIiII1iIlliiIl1Il ~= 0 then iI1i11lIl1illlIllil = IIii1IIlIi11IIIlliI + IiIIiII1iIlliiIl1Il - 1 else iI1i11lIl1illlIllil = IilI11l1iIl1IiiIlIi end iI1i11lIl1illlIllil, Ill11I1IlIiilI1i1lI = liliili1IlIiI111IIi(lllI11iiiIlI11IiiiI[IIii1IIlIi11IIIlliI](iill11Ili1Iiii1lli1(lllI11iiiIlI11IiiiI, IIii1IIlIi11IIIlliI + 1, iI1i11lIl1illlIllil))) else iI1i11lIl1illlIllil, Ill11I1IlIiilI1i1lI = liliili1IlIiI111IIi(lllI11iiiIlI11IiiiI[IIii1IIlIi11IIIlliI]()) end if lil11l11II111iIi111 ~= 1 then if lil11l11II111iIi111 ~= 0 then iI1i11lIl1illlIllil = IIii1IIlIi11IIIlliI + lil11l11II111iIi111 - 2 IilI11l1iIl1IiiIlIi = iI1i11lIl1illlIllil + 1 else iI1i11lIl1illlIllil = iI1i11lIl1illlIllil + IIii1IIlIi11IIIlliI - 1 IilI11l1iIl1IiiIlIi = iI1i11lIl1illlIllil end lIlI11I1iIl1iiIilIll1 = 0 for lIl1iIl1i1illiIl1l1lI = IIii1IIlIi11IIIlliI, iI1i11lIl1illlIllil do lIlI11I1iIl1iiIilIll1 = lIlI11I1iIl1iiIilIll1 + 1 lllI11iiiIlI11IiiiI[lIl1iIl1i1illiIl1l1lI] = Ill11I1IlIiilI1i1lI[lIlI11I1iIl1iiIilIll1] end else IilI11l1iIl1IiiIlIi = IIii1IIlIi11IIIlliI - 1 end for lIl1iIl1i1illiIl1l1lI = IilI11l1iIl1IiiIlIi + 1, lIlI1il1l1iIiIll1I1ll do lllI11iiiIlI11IiiiI[lIl1iIl1i1illiIl1l1lI] = nil end elseif not not lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[9]] == (iiliIi1lIi11iII1Iii[2] == 0) then I1ll1I1i1l1IIiilIII = I1ll1I1i1l1IIiilIII + 1 end else local iill11liIiIl11i1ilI, lIllIIIliIiii11liiIl1 if iiliIi1lIi11iII1Iii[7] then iill11liIiIl11i1ilI = iiliIi1lIi11iII1Iii[10] else iill11liIiIl11i1ilI = lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[5]] end if iiliIi1lIi11iII1Iii[1] then lIllIIIliIiii11liiIl1 = iiliIi1lIi11iII1Iii[6] else lIllIIIliIiii11liiIl1 = lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[2]] end lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[9]][iill11liIiIl11i1ilI] = lIllIIIliIiii11liiIl1 end elseif lIlIl1liIi1ii1I11li11 < 10 then if iiliIi1lIi11iII1Iii[2] == 241 then I1ll1I1i1l1IIiilIII = I1ll1I1i1l1IIiilIII - 1 il1iillI1l1iI1IIIIi[I1ll1I1i1l1IIiilIII] = { [8] = 22, [9] = (iiliIi1lIi11iII1Iii[9] - 120) % 256, [5] = (iiliIi1lIi11iII1Iii[5] - 120) % 256 } else for lIl1iIl1i1illiIl1l1lI = iiliIi1lIi11iII1Iii[9], iiliIi1lIi11iII1Iii[5] do lllI11iiiIlI11IiiiI[lIl1iIl1i1illiIl1l1lI] = nil end end elseif lIlIl1liIi1ii1I11li11 ~= 11 then lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[9]] = iiliIi1lIi11iII1Iii[5] ~= 0 if iiliIi1lIi11iII1Iii[2] ~= 0 then I1ll1I1i1l1IIiilIII = I1ll1I1i1l1IIiilIII + 1 end else iIllll1IiI1lilIII1l[lllI11iiiIlI11IiiiI] = nil local IIii1IIlIi11IIIlliI = iiliIi1lIi11iII1Iii[9] local lIl1lilIiIiliii1ii1lI = iiliIi1lIi11iII1Iii[5] if lIl1lilIiIiliii1ii1lI == 1 then return true end local iI1i11lIl1illlIllil = IIii1IIlIi11IIIlliI + lIl1lilIiIiliii1ii1lI - 2 if lIl1lilIiIiliii1ii1lI == 0 then iI1i11lIl1illlIllil = IilI11l1iIl1IiiIlIi end return true, IIii1IIlIi11IIIlliI, iI1i11lIl1illlIllil end elseif lIlIl1liIi1ii1I11li11 < 18 then if lIlIl1liIi1ii1I11li11 >= 15 then if lIlIl1liIi1ii1I11li11 >= 16 then if lIlIl1liIi1ii1I11li11 == 17 then local iill11liIiIl11i1ilI, lIllIIIliIiii11liiIl1 if iiliIi1lIi11iII1Iii[7] then iill11liIiIl11i1ilI = iiliIi1lIi11iII1Iii[10] else iill11liIiIl11i1ilI = lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[5]] end if iiliIi1lIi11iII1Iii[1] then lIllIIIliIiii11liiIl1 = iiliIi1lIi11iII1Iii[6] else lIllIIIliIiii11liiIl1 = lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[2]] end lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[9]] = iill11liIiIl11i1ilI / lIllIIIliIiii11liiIl1 else lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[9]] = I1IIi1Il1Ii11ilIil1[iiliIi1lIi11iII1Iii[5]] end else local iill11liIiIl11i1ilI, lIllIIIliIiii11liiIl1 if iiliIi1lIi11iII1Iii[7] then iill11liIiIl11i1ilI = iiliIi1lIi11iII1Iii[10] else iill11liIiIl11i1ilI = lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[5]] end if iiliIi1lIi11iII1Iii[1] then lIllIIIliIiii11liiIl1 = iiliIi1lIi11iII1Iii[6] else lIllIIIliIiii11liiIl1 = lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[2]] end lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[9]] = iill11liIiIl11i1ilI - lIllIIIliIiii11liiIl1 end elseif lIlIl1liIi1ii1I11li11 < 13 then local iill11liIiIl11i1ilI, lIllIIIliIiii11liiIl1 if iiliIi1lIi11iII1Iii[7] then iill11liIiIl11i1ilI = iiliIi1lIi11iII1Iii[10] else iill11liIiIl11i1ilI = lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[5]] end if iiliIi1lIi11iII1Iii[1] then lIllIIIliIiii11liiIl1 = iiliIi1lIi11iII1Iii[6] else lIllIIIliIiii11liiIl1 = lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[2]] end lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[9]] = iill11liIiIl11i1ilI * lIllIIIliIiii11liiIl1 elseif lIlIl1liIi1ii1I11li11 ~= 14 then if iiliIi1lIi11iII1Iii[2] == 213 then I1ll1I1i1l1IIiilIII = I1ll1I1i1l1IIiilIII - 1 il1iillI1l1iI1IIIIi[I1ll1I1i1l1IIiilIII] = { [8] = 16, [9] = (iiliIi1lIi11iII1Iii[9] - 88) % 256, [5] = (iiliIi1lIi11iII1Iii[5] - 88) % 256 } else local lIl111I1lIlI1I111l1Il = iiliIi1lIi11iII1Iii[9] local lIiii1il1IIil1i1iI1 = {} for i1IIlI1iiII1l11liiI, iIIllI1iiiiillIl1ll in pairs(iIllll1IiI1lilIII1l[lllI11iiiIlI11IiiiI]) do for i1IIlI1iiII1l11liiI, I1iIi1i1I11llIllIiI in pairs(iIIllI1iiiiillIl1ll) do if I1iIi1i1I11llIllIiI[1] == lllI11iiiIlI11IiiiI and lIl111I1lIlI1I111l1Il <= I1iIi1i1I11llIllIiI[2] then local i1iill1i1ll1IliIil1 = I1iIi1i1I11llIllIiI[2] if not lIiii1il1IIil1i1iI1[i1iill1i1ll1IliIil1] then liillliI1111Ill1l1l(lIl1liI1lil1llll11iii, lllI11iiiIlI11IiiiI[i1iill1i1ll1IliIil1]) lIiii1il1IIil1i1iI1[i1iill1i1ll1IliIil1] = #lIl1liI1lil1llll11iii end I1iIi1i1I11llIllIiI[1] = lIl1liI1lil1llll11iii I1iIi1i1I11llIllIiI[2] = lIiii1il1IIil1i1iI1[i1iill1i1ll1IliIil1] end end end end else lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[9]] = { iill11Ili1Iiii1lli1(ll1ilIIi1liIliIl1lI, 1, iiliIi1lIi11iII1Iii[5] == 0 and 255 or iiliIi1lIi11iII1Iii[5]) } end elseif lIlIl1liIi1ii1I11li11 >= 21 then if lIlIl1liIi1ii1I11li11 < 23 then if lIlIl1liIi1ii1I11li11 ~= 22 then if iiliIi1lIi11iII1Iii[5] == 146 then I1ll1I1i1l1IIiilIII = I1ll1I1i1l1IIiilIII - 1 il1iillI1l1iI1IIIIi[I1ll1I1i1l1IIiilIII] = { [8] = 11, [9] = (iiliIi1lIi11iII1Iii[9] - 229) % 256, [5] = (iiliIi1lIi11iII1Iii[2] - 229) % 256 } else local IIii1IIlIi11IIIlliI = iiliIi1lIi11iII1Iii[9] local l1l1IIi1Il1IIl1IllI = IIii1IIlIi11IIIlliI + 2 local iIiili1iIi1lI1IillI = { lllI11iiiIlI11IiiiI[IIii1IIlIi11IIIlliI](lllI11iiiIlI11IiiiI[IIii1IIlIi11IIIlliI + 1], lllI11iiiIlI11IiiiI[IIii1IIlIi11IIIlliI + 2]) } for lIl1iIl1i1illiIl1l1lI = 1, iiliIi1lIi11iII1Iii[2] do lllI11iiiIlI11IiiiI[l1l1IIi1Il1IIl1IllI + lIl1iIl1i1illiIl1l1lI] = iIiili1iIi1lI1IillI[lIl1iIl1i1illiIl1l1lI] end if lllI11iiiIlI11IiiiI[IIii1IIlIi11IIIlliI + 3] ~= nil then lllI11iiiIlI11IiiiI[IIii1IIlIi11IIIlliI + 2] = lllI11iiiIlI11IiiiI[IIii1IIlIi11IIIlliI + 3] else I1ll1I1i1l1IIiilIII = I1ll1I1i1l1IIiilIII + 1 end end elseif iiliIi1lIi11iII1Iii[2] == 118 then I1ll1I1i1l1IIiilIII = I1ll1I1i1l1IIiilIII - 1 il1iillI1l1iI1IIIIi[I1ll1I1i1l1IIiilIII] = { [8] = 8, [9] = (iiliIi1lIi11iII1Iii[9] - 80) % 256, [2] = (iiliIi1lIi11iII1Iii[5] - 80) % 256 } else lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[9]] = lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[5]] end elseif lIlIl1liIi1ii1I11li11 ~= 24 then I1ll1I1i1l1IIiilIII = I1ll1I1i1l1IIiilIII + (iiliIi1lIi11iII1Iii[4] - IiiI11ll111li1Iiil1) else local iill11liIiIl11i1ilI, lIllIIIliIiii11liiIl1 if iiliIi1lIi11iII1Iii[7] then iill11liIiIl11i1ilI = iiliIi1lIi11iII1Iii[10] else iill11liIiIl11i1ilI = lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[5]] end if iiliIi1lIi11iII1Iii[1] then lIllIIIliIiii11liiIl1 = iiliIi1lIi11iII1Iii[6] else lIllIIIliIiii11liiIl1 = lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[2]] end if iill11liIiIl11i1ilI == lIllIIIliIiii11liiIl1 ~= (iiliIi1lIi11iII1Iii[9] ~= 0) then I1ll1I1i1l1IIiilIII = I1ll1I1i1l1IIiilIII + 1 end end elseif lIlIl1liIi1ii1I11li11 < 19 then if iiliIi1lIi11iII1Iii[2] == 198 then I1ll1I1i1l1IIiilIII = I1ll1I1i1l1IIiilIII - 1 il1iillI1l1iI1IIIIi[I1ll1I1i1l1IIiilIII] = { [8] = 21, [9] = (iiliIi1lIi11iII1Iii[9] - 89) % 256, [2] = (iiliIi1lIi11iII1Iii[5] - 89) % 256 } else lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[9]] = not lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[5]] end elseif lIlIl1liIi1ii1I11li11 ~= 20 then local lIl1l11llI1ll1I11ll11 = lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[5]] local lIllIIIliIiii11liiIl1 if iiliIi1lIi11iII1Iii[1] then lIllIIIliIiii11liiIl1 = iiliIi1lIi11iII1Iii[6] else lIllIIIliIiii11liiIl1 = lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[2]] end lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[9] + 1] = lIl1l11llI1ll1I11ll11 lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[9]] = lIl1l11llI1ll1I11ll11[lIllIIIliIiii11liiIl1] else local iill11liIiIl11i1ilI, lIllIIIliIiii11liiIl1 if iiliIi1lIi11iII1Iii[7] then iill11liIiIl11i1ilI = iiliIi1lIi11iII1Iii[10] else iill11liIiIl11i1ilI = lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[5]] end if iiliIi1lIi11iII1Iii[1] then lIllIIIliIiii11liiIl1 = iiliIi1lIi11iII1Iii[6] else lIllIIIliIiii11liiIl1 = lllI11iiiIlI11IiiiI[iiliIi1lIi11iII1Iii[2]] end if iill11liIiIl11i1ilI < lIllIIIliIiii11liiIl1 ~= (iiliIi1lIi11iII1Iii[9] ~= 0) then I1ll1I1i1l1IIiilIII = I1ll1I1i1l1IIiilIII + 1 end end end end local IIIIi111li1IIl1l1l1, liiii1IIii1Ii1lI11I, lIl111I1lIlI1I111l1Il, Iil1ll1li1Il1illl1i = iIlIiiIllIlii1liiiI(lIlI11I1iIl1iiIilIll1) if IIIIi111li1IIl1l1l1 then if lIl111I1lIlI1I111l1Il then return iill11Ili1Iiii1lli1(lllI11iiiIlI11IiiiI, lIl111I1lIlI1I111l1Il, Iil1ll1li1Il1illl1i) end else lIlIIi1ilillIi1iI1il1("Luraph Script:" .. (lilliiiI1IIlii1il1i[I1ll1I1i1l1IIiilIII - 1] or "") .. ": " .. iIIIiIIII1l1lliiiIl(liiii1IIii1Ii1lI11I), 0) end end l1llIllliIllI1Iii1I(lI1IiiI11I1Illiliii, ll1lIiiIIllllliiIl1) return lI1IiiI11I1Illiliii end local lIiii1il1IIil1i1iI1 = li1llI1IlIil111lIlI() return liillliI1111Ill1l1l(lIiii1il1IIil1i1iI1, ll1lIiiIIllllliiIl1)() end liiIl111l1liii1Iii111llI1Illi1I1iiIl())
